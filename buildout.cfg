[buildout]
develop = .
egg = ctq-sqlalchemy
egg-source-directory = ctq_sqlalchemy

parts +=
    black
    isort
    code-analysis
    fix-code-analysis
    test
    createcoverage


extensions = mr.developer
auto-checkout = *

[sources]
ctq = git git@github.com:olivelink/ctq.git


[black]
recipe = zc.recipe.egg
eggs = black

[isort.cfg]
recipe = collective.recipe.template
output = ${buildout:directory}/.isort.cfg
input = inline:
    [settings]
    force_alphabetical_sort = True
    force_single_line = True
    lines_after_imports = 2
    line_length = 200
    not_skip = __init__.py

[isort]
recipe = zc.recipe.egg
eggs = isort
_depends = ${isort.cfg:input}

[fix-code-analysis]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/${:_buildout_section_name_}
mode = 755
input = inline:
    #!/bin/sh
    cd ${buildout:directory}
    echo '--> running isort'
    bin/isort --recursive ${buildout:egg-source-directory}
    echo '--> running black'
    bin/black ${buildout:egg-source-directory}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:egg-source-directory}
pre-commit-hook = False
flake8 = True
flake8-ignore = E501 W503 C812 C815 N803 C101
flake8-max-line-length = 110
flake8-max-complexity = 18
flake8-inline-quotes = "
flake8-extensions =
    flake8-blind-except
    flake8-coding
    flake8-commas
    flake8-debugger
    flake8-deprecated
    flake8-isort
    flake8-pep3101
    flake8-quotes
    flake8-todo
    flake8-black
    pep8-naming
return-status-codes = True
_depends = ${isort.cfg:input}

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:egg}
environment = test-environment

[test-environment]

[coveragerc]
recipe = collective.recipe.template
output = ${buildout:directory}/.coveragerc
input = inline:
    [run]
    source = ${buildout:egg-source-directory}

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage
_depends = ${coveragerc:input}



